int maxProfit(vector<int> &prices){
    int n = prices.size();
    if (n == 0)
        return 0;

    vector<vector<int>> curr(3, vector<int>(2, 0));
    vector<vector<int>> next(3,  vector<int>(2, 0));

    // Iterate from the last day to the first
    for (int i = n - 1; i >= 0; i--){
        for (int k = 1; k <= 2; k++){
          
            // Calculate for buy state
            curr[k][1] = max(-prices[i] +
                       next[k][0], next[k][1]);
          
            // Calculate for sell state
            curr[k][0] = max(prices[i] +
                    next[k - 1][1], next[k][0]);
        }
        
        // Move current state to next, for the
        // next iteration
        next = curr;
    }

    return curr[2][1];
}