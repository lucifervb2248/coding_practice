int diameterRecur(Node* root, int &res) {
  
    // Base case: tree is empty
    if (root == nullptr)
        return 0;
    
    // find the height of left and right subtree
    // (it will also find of diameter for left 
    // and right subtree).
    int lHeight = diameterRecur(root->left, res);
    int rHeight = diameterRecur(root->right, res);
    
    // Check if diameter of root is greater
    // than res.
    res = max(res, lHeight+rHeight);
    
    // return the height of current subtree.
    return 1 + max(lHeight, rHeight);
}

// Function to get diameter of a binary tree
int diameter(Node* root) {
  
    int res = 0;
    diameterRecur(root, res);
    return res;
}